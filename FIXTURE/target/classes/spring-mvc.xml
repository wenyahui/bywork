<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"  
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/aop   
     					http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
     					http://www.springframework.org/schema/tx 
     					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd     
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task 
     				    http://www.springframework.org/schema/task/spring-task-4.0.xsd
     				    http://www.springframework.org/schema/websocket
						http://www.springframework.org/schema/websocket/spring-websocket.xsd" default-lazy-init="false">  
                        
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <!-- <context:component-scan base-package="com.fixture.*.controller" />  
    <context:component-scan base-package="com.fixture.*.dao.impl" /> 
    <context:component-scan base-package="com.fixture.*.service.impl" />
    <context:component-scan base-package="com.fixture.aop" /> 
    <context:component-scan base-package="com.fixture.annotation" /> 
    <context:component-scan base-package="com.fixture.api" /> -->
    
    <!-- 定时任务 -->
    <context:component-scan base-package="com.fixture.job" />
    <!-- websocket -->
    <!-- <context:component-scan base-package="com.fixture.websocket" /> -->
    
   	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller--> 
	<aop:aspectj-autoproxy proxy-target-class="true"/> 
    
    <!-- 国际化文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" >
			<list>
        		<value>message</value>
     		 </list>
       </property>
       <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
   	   <property name="useCodeAsDefaultMessage" value="true" /> 
	</bean>
	
	 <!-- 统一异常处理类 -->
	<bean id="handlerExceptionResolver" class="com.fixture.interceptor.ExceptionInterception">
	</bean>
	
	
	
  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->   
	 <mvc:annotation-driven>  
	   <mvc:message-converters register-defaults="true">  
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
	            <constructor-arg value="UTF-8" />          
	        </bean>  
	   
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	            <property name="supportedMediaTypes">  
	            	<list>  
	               		 <value>text/html;charset=UTF-8</value>
	               		 <value>text/plain;charset=UTF-8</value>  
	                     <value>application/json;charset=UTF-8</value>   
	            	</list>  
	        	</property> 
	        	<property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>  
                    </bean>  
                </property> 
	         </bean> 
	     </mvc:message-converters>  
	  </mvc:annotation-driven>
  
    
  <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
  <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址  --> 
  <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/" />  
        <property name="suffix" value=".html" />  
    </bean> -->
    <!-- org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -->
    <!-- freemarker的配置 -->
	<bean id="freemarkerConfig"
		class="com.fixture.utils.ShiroTagFreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/main/" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="datetime_format">yyyy-MM-dd</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
				<prop key="classic_compatible">true</prop>
			</props>
		</property>
	</bean>

	<!--视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="requestContextAttribute" value="request" />
		<property name="order" value="1" />
	</bean>

      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>  
    
    <!-- 静态文件 -->
    <mvc:resources location="/WEB-INF/assets/" mapping="/assets/**" />
    <mvc:resources location="/WEB-INF/static/" mapping="/static/**" />
	<!-- swagger -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/apidocs/**" location="/WEB-INF/swagger/"/>
	<mvc:resources mapping="/404.html" location="/WEB-INF/main/404.html"/>
	<mvc:resources mapping="/500.html" location="/WEB-INF/main/500.html"/>
	<mvc:resources mapping="/illegalAccess.html" location="/WEB-INF/main/illegalAccess.html"/>
	<mvc:resources mapping="/error.html" location="/WEB-INF/main/error.html"/>
	
    <!-- 定时器设定,启用时将以下注释取消 --> 
	<!-- <task:scheduler id="taskScheduler" pool-size="100" />
	<task:scheduled-tasks scheduler="taskScheduler">
		<task:scheduled ref="flushJob" method="flushActivity" cron="0/5 * * * * ?"/>
	</task:scheduled-tasks> -->
  
  	<!-- websocket -->
  	<!-- <websocket:handlers allowed-origins="*">  
	    <websocket:mapping path="/websocket" handler="websocketEndPoint"/>  
	    <websocket:handshake-interceptors>  
	   		 <bean class="com.fixture.websocket.HandshakeInterceptor"/>  
	    </websocket:handshake-interceptors>  
	</websocket:handlers> -->
</beans>  
<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://java.sun.com/xml/ns/javaee   
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	
	<display-name>fixture</display-name>
  	
  	<!-- Spring和mybatis的配置文件 -->  
  <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:applicationContext.xml</param-value>  
   </context-param> 
   
   <!-- log4j配置文件 -->
   <context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	
    <!-- 编码过滤器 -->  
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>      
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    
    <!-- Spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener> 
    
    <!-- 防止Spring内存溢出监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener> 
    
    <!-- log4j监听器 -->
    <listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<!-- 分页异常查询 -->
	
     <!--    <listener>
      <listener-class>com.github.miemiedev.mybatis.paginator.CleanupMybatisPaginatorListener</listener-class>
    </listener> -->
	
    <!-- Spring MVC servlet -->  
    <servlet>  
        <servlet-name>SpringMVC</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported>  
    </servlet>  
    
    <servlet-mapping>  
        <servlet-name>SpringMVC</servlet-name>  
        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  
        <url-pattern>/</url-pattern>  
    </servlet-mapping>  
    <!-- sql注入过滤 -->
    <filter>
        <filter-name>AntiSqlInjection</filter-name>
        <filter-class>com.fixture.filter.AntiSqlInjectionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AntiSqlInjection</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    
   
	 <!-- Cos过滤 org.apache.catalina.filters.CorsFilter-->
	<filter>
       <filter-name>CorsFilter</filter-name>
       <filter-class>com.fixture.filter.CorsFilter</filter-class>
     </filter>
     <filter-mapping>
       <filter-name>CorsFilter</filter-name>
       <url-pattern>/*</url-pattern>
     </filter-mapping>
     
     
     <!-- shiro过滤器定义 -->
	    <filter>
	        <filter-name>shiroFilter</filter-name>
	        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	        <init-param>
	            <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
	            <param-name>targetFilterLifecycle</param-name>
	            <param-value>true</param-value>
	        </init-param>
	    </filter>
	    <filter-mapping>
	        <filter-name>shiroFilter</filter-name>
	        <url-pattern>/*</url-pattern>
	    </filter-mapping>
     
     
     <!-- 添加druid监控-->   
	<servlet>  
	    <servlet-name>DruidStatView</servlet-name>  
	    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>  
	</servlet>  
	<servlet-mapping>  
	    <servlet-name>DruidStatView</servlet-name>  
	    <url-pattern>/druid/*</url-pattern>  
	</servlet-mapping>
	
	<!-- 添加Web应用等监控-->  
	<filter>
	    <filter-name>DruidWebStatFilter</filter-name>
	    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
	    <init-param>
	        <param-name>exclusions</param-name>
	        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico</param-value>
	    </init-param>
	    <init-param>
	        <param-name>profileEnable</param-name>
	        <param-value>true</param-value>
	    </init-param>
	    <init-param>
	        <param-name>principalCookieName</param-name>
	        <param-value>USER_COOKIE</param-value>
	    </init-param>
	    <init-param>
	        <param-name>principalSessionName</param-name>
	        <param-value>USER_SESSION</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>DruidWebStatFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
     
    
     
   <!--  <error-page>  
        <error-code>404</error-code>  
        <location>/WEB-INF/main/404.html</location> 
	</error-page>   
	
	<error-page>
        <error-code>500</error-code>  
        <location>/WEB-INF/main/500.html</location>  	
	</error-page> -->
</web-app>
